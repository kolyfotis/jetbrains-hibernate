{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Department management API",
    "description" : "This is a simple API to manage departments.",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8080/jetbrains-hibernate/webapi",
    "description" : "Development Server"
  } ],
  "paths" : {
    "/utils/generateApiDocJSON" : {
      "get" : {
        "operationId" : "generateAPIDocumentationJSON",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/departments" : {
      "get" : {
        "tags" : [ "departments", "get" ],
        "summary" : "List all departments",
        "description" : "Returns all Departments from the Database.",
        "operationId" : "getDepartments",
        "responses" : {
          "200" : {
            "description" : "All Departments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "department", "post", "create" ],
        "summary" : "Create a new department",
        "description" : "Accepts a Department entity as JSON or XML and stores it in the database.",
        "operationId" : "createDepartment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Department created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "department" ],
        "summary" : "Deletes a department by it's name provided as path parameter.",
        "description" : "Receives a department's name as a Path Parameter, and deletes the department from the database. Admin authorization is required to delete a department.",
        "operationId" : "deleteDepartmentByName",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Department deleted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          },
          "404" : {
            "description" : "Please provide a valid department name.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/departments/{id}" : {
      "get" : {
        "tags" : [ "department", "get" ],
        "summary" : "Get one Department by it's id",
        "description" : "Receives a department's id as a Path Parameter, and returns the department.",
        "operationId" : "getDepartmentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Department found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "department", "put", "update" ],
        "summary" : "Updates a department",
        "description" : "Accepts a Department's id as a path parameter and a Department entity as JSON or XML and updates the department in the database.",
        "operationId" : "updateDepartmentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Department updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "department" ],
        "summary" : "Deletes a department by it's id provided as path parameter.",
        "description" : "Receives a department's id as a Path Parameter, and deletes the department from the database. Admin authorization is required to delete a department.",
        "operationId" : "deleteDepartmentById",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Department deleted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          },
          "404" : {
            "description" : "Please provide a valid department name.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/employees" : {
      "get" : {
        "operationId" : "getEmployees",
        "parameters" : [ {
          "name" : "department",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shiro" : {
      "get" : {
        "operationId" : "sayHelloShiro",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/shiro/define" : {
      "get" : {
        "operationId" : "defineShiro",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/test/admin" : {
      "get" : {
        "operationId" : "getAdminMessage",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/test" : {
      "get" : {
        "operationId" : "getIt",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/test/employee" : {
      "get" : {
        "operationId" : "getEmployeeResource",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Department" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "employees" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Employee"
            }
          }
        }
      },
      "Employee" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "departments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Department"
            }
          }
        }
      },
      "Message" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        }
      }
    }
  }
}